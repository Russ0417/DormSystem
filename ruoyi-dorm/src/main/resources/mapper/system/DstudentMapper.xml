<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.DstudentMapper">

    <resultMap type="Dstudent" id="DstudentResult">
        <result property="id" column="id"/>
        <result property="studentId" column="student_id"/>
        <result property="studentName" column="student_name"/>
        <result property="studentSex" column="student_sex"/>
        <result property="studentClass" column="student_class"/>
        <result property="studentGrade" column="student_grade"/>
        <result property="studentDorm" column="student_dorm"/>
        <result property="studentBuild" column="student_build"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
        <result property="remark" column="remark"/>
    </resultMap>

    <sql id="selectDstudentVo">
        select id,
               student_id,
               student_name,
               student_sex,
               student_class,
               student_grade,
               student_dorm,
               student_build,
               create_by,
               create_time,
               update_by,
               update_time,
               remark
        from dstudent
    </sql>

    <select id="selectDstudentList" parameterType="Dstudent" resultMap="DstudentResult">
        <include refid="selectDstudentVo"/>
        <where>
            <if test="studentId != null  and studentId != ''">and student_id = #{studentId}</if>
            <if test="studentName != null  and studentName != ''">and student_name like concat('%', #{studentName},
                '%')
            </if>
            <if test="studentSex != null  and studentSex != ''">and student_sex = #{studentSex}</if>
            <if test="studentClass != null  and studentClass != ''">and student_class = #{studentClass}</if>
            <if test="studentGrade != null  and studentGrade != ''">and student_grade = #{studentGrade}</if>
            <if test="studentDorm != null  and studentDorm != ''">and student_dorm = #{studentDorm}</if>
            <if test="studentBuild != null  and studentBuild != ''">and student_build = #{studentBuild}</if>
        </where>
    </select>

    <select id="selectDstudentById" parameterType="String" resultMap="DstudentResult">
        <include refid="selectDstudentVo"/>
        where id = #{id}
    </select>
    <select id="selectStudentByClassId" resultType="com.ruoyi.system.domain.Dstudent">
        select * from dstudent where student_class = #{classId}
    </select>

    <insert id="insertDstudent" parameterType="Dstudent">
        insert into dstudent
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="studentId != null and studentId != ''">student_id,</if>
            <if test="studentName != null and studentName != ''">student_name,</if>
            <if test="studentSex != null and studentSex != ''">student_sex,</if>
            <if test="studentClass != null and studentClass != ''">student_class,</if>
            <if test="studentGrade != null and studentGrade != ''">student_grade,</if>
            <if test="studentDorm != null and studentDorm != ''">student_dorm,</if>
            <if test="studentBuild != null and studentBuild != ''">student_build,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="remark != null">remark,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id},</if>
            <if test="studentId != null and studentId != ''">#{studentId},</if>
            <if test="studentName != null and studentName != ''">#{studentName},</if>
            <if test="studentSex != null and studentSex != ''">#{studentSex},</if>
            <if test="studentClass != null and studentClass != ''">#{studentClass},</if>
            <if test="studentGrade != null and studentGrade != ''">#{studentGrade},</if>
            <if test="studentDorm != null and studentDorm != ''">#{studentDorm},</if>
            <if test="studentBuild != null and studentBuild != ''">#{studentBuild},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="remark != null">#{remark},</if>
        </trim>
    </insert>

    <update id="updateDstudent" parameterType="Dstudent">
        update dstudent
        <trim prefix="SET" suffixOverrides=",">
            <if test="studentId != null and studentId != ''">student_id = #{studentId},</if>
            <if test="studentName != null and studentName != ''">student_name = #{studentName},</if>
            <if test="studentSex != null and studentSex != ''">student_sex = #{studentSex},</if>
            <if test="studentClass != null and studentClass != ''">student_class = #{studentClass},</if>
            <if test="studentGrade != null and studentGrade != ''">student_grade = #{studentGrade},</if>
            <if test="studentDorm != null and studentDorm != ''">student_dorm = #{studentDorm},</if>
            <if test="studentBuild != null and studentBuild != ''">student_build = #{studentBuild},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="remark != null">remark = #{remark},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteDstudentById" parameterType="String">
        delete
        from dstudent
        where id = #{id}
    </delete>

    <delete id="deleteDstudentByIds" parameterType="String">
        delete from dstudent where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>